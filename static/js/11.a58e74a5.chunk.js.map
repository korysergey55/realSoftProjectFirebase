{"version":3,"sources":["utils/Firebase.js","containers/Public/RegistrationPage/ResetPassword/styles.module.scss","containers/Public/RegistrationPage/ResetPassword/index.tsx"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","OAuth","auth","db","firestore","languageCode","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","signInWithGoogle","a","signInWithPopup","res","toast","success","theme","console","error","message","signInWithFacebook","signInWithEmailAndPassword","email","password","registerWithEmailAndPassword","name","createUserWithEmailAndPassword","user","collection","add","uid","authProvider","sendPasswordResetEmail","logout","signOut","writeUserPathDatabase","path","userId","database","ref","set","reedUserPathDatabase","postId","on","snapshot","data","val","sauntrStore","setUserPath","module","exports","ResetPassword","Form","useForm","form","history","useHistory","useState","userEmail","setUserEmail","resetPasswordResponce","push","className","styles","container","title","href","subtitle","formContainer","labelCol","span","wrapperCol","initialValues","remember","onFinish","onFinishFailed","errorInfo","log","autoComplete","Item","label","rules","required","value","placeholder","onChange","e","target","offset","type","htmlType"],"mappings":"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","file":"static/js/11.a58e74a5.chunk.js","sourcesContent":["import firebase from 'firebase'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport sauntrStore from 'stores/saunter'\n\nlet configKorySergey = {\n  apiKey: process.env.REACT_APP_WEB_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  OAuth: process.env.REACT_APP_OAUTH,\n}\n// let configRealSoft = {\n//   apiKey: 'AIzaSyDwpUrScZfWnJtvC1bA3j1iF14-ZE-ff-U',\n//   authDomain: 'realsoftproject-5d44c.firebaseapp.com',\n//   databaseURL: 'https://realsoftproject-5d44c-default-rtdb.firebaseio.com/',\n//   projectId: 'realsoftproject-5d44c',\n//   OAuth: 'https://realsoftproject-5d44c.firebaseapp.com/__/auth/handler',\n// }\nconst app = firebase.initializeApp(configKorySergey)\nconst auth = app.auth()\nconst db = app.firestore()\nauth.languageCode = 'en'\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\nconst facebookProvider = new firebase.auth.FacebookAuthProvider()\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await auth.signInWithPopup(googleProvider)\n    if (res) {\n      toast.success('You was successfully Login!', {\n        theme: 'colored',\n      })\n    }\n    return res\n  } catch (err) {\n    console.error(err)\n    toast.error(`${err.message}`, {\n      theme: 'colored',\n    })\n  }\n}\nconst signInWithFacebook = async () => {\n  try {\n    const res = await auth.signInWithPopup(facebookProvider)\n    return res\n  } catch (err) {\n    console.error(err)\n    toast.error(`${err.message}`, {\n      theme: 'colored',\n    })\n  }\n}\nconst signInWithEmailAndPassword = async (email, password) => {\n  try {\n    const res = await auth.signInWithEmailAndPassword(email, password)\n    if (res) {\n      toast.success('You was successfully Login!', {\n        theme: 'colored',\n      })\n    }\n    return res\n  } catch (err) {\n    console.error(err)\n    toast.error(`${err.message}`, {\n      theme: 'colored',\n    })\n  }\n}\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await auth.createUserWithEmailAndPassword(email, password)\n    if (res) {\n      toast.success('You was successfully registered. Login please!', {\n        theme: 'colored',\n      })\n    }\n    const user = res.user\n    await db.collection('users').add({\n      uid: user.uid,\n      name,\n      authProvider: 'local',\n      email,\n    })\n  } catch (err) {\n    console.error(err)\n    toast.error(`${err.message}`, {\n      theme: 'colored',\n    })\n  }\n}\nconst sendPasswordResetEmail = async email => {\n  try {\n    const res = await auth.sendPasswordResetEmail(email)\n    toast('Password reset link sent! Check your email!', {\n      theme: 'colored',\n    })\n  } catch (err) {\n    console.error(err)\n    toast.error(`${err.message}`, {\n      theme: 'colored',\n    })\n  }\n}\n\nconst logout = () => {\n  auth.signOut()\n  toast.success('signOut success!', {\n    theme: 'colored',\n  })\n}\n\nconst writeUserPathDatabase = (path, userId) => {\n  firebase\n    .database()\n    .ref('users/' + userId)\n    .set(path)\n  toast.success('Path added to database!', {\n    theme: 'colored',\n  })\n}\n\nconst reedUserPathDatabase = postId => {\n  const userPathRef = firebase.database().ref('users/' + postId)\n  userPathRef.on('value', snapshot => {\n    const data = snapshot.val()\n    if (data) {\n      sauntrStore.setUserPath(data)\n    }\n  })\n}\n\nconst remuveUserPathDatabase = (pathId, userId) => {\n  firebase\n    .database()\n    .ref('users/' + userId)\n    .remove(pathId)\n  toast.success('Path was remuved from database!', {\n    theme: 'colored',\n  })\n}\n\nexport {\n  auth,\n  db,\n  signInWithGoogle,\n  logout,\n  signInWithFacebook,\n  signInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n  sendPasswordResetEmail,\n  writeUserPathDatabase,\n  reedUserPathDatabase,\n  remuveUserPathDatabase,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3xxK2\",\"title\":\"styles_title__2j2B3\",\"subtitle\":\"styles_subtitle__3lTzS\",\"formContainer\":\"styles_formContainer__3dI-K\"};","import React, { useState } from 'react'\nimport { sendPasswordResetEmail } from 'utils/Firebase'\nimport { Form, Input, Button } from 'antd'\nimport styles from './styles.module.scss'\nimport { toJS } from 'mobx'\nimport { useHistory } from 'react-router'\n\nconst ResetPassword = () => {\n  const [form] = Form.useForm()\n  const history = useHistory()\n  const [userEmail, setUserEmail] = useState()\n\n  const onChange = (e: any) => {\n    setUserEmail(e.target.value)\n  }\n  const onFinish = () => {\n    resetPasswordResponce()\n  }\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo)\n  }\n  const resetPasswordResponce = () => {\n    sendPasswordResetEmail(userEmail)\n    history.push('/home')\n  }\n\n  return (\n    <div className={styles.container}>\n      <a className={styles.title} href=\"/home\">\n        Sounter <p className={styles.subtitle}> create own routes</p>\n      </a>\n      <div className={styles.formContainer}>\n        <Form\n          form={form}\n          name=\"ResetPassvorfForm\"\n          labelCol={{ span: 8 }}\n          wrapperCol={{ span: 16 }}\n          initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Enter your Email\"\n            rules={[{ required: true, message: 'Please input your email!' }]}\n          >\n            <Input\n              name=\"email\"\n              value={userEmail}\n              placeholder=\"Enter email to reset password\"\n              onChange={onChange}\n            />\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Reset password\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ResetPassword\n"],"sourceRoot":""}