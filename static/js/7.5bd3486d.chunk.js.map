{"version":3,"sources":["utils/CurrentGeoposition/index.tsx","components/MapComponentMemo/index.tsx","components/MapComponentMemo/styles.module.scss","containers/Public/Modal/styles.module.scss","containers/Public/SaunterPage/PathFormComponent/styles.module.scss","containers/Public/SaunterPage/SounterHeader/styles.module.scss","containers/Public/SaunterPage/Filter/styles.module.scss","containers/Public/SaunterPage/SounterList/styles.module.scss","containers/Public/SaunterPage/SounterComponent/styles.module.scss","containers/Public/Modal/modal.tsx","containers/Public/SaunterPage/PathFormComponent/index.tsx","containers/Public/SaunterPage/SounterHeader/index.tsx","containers/Public/SaunterPage/Filter/index.tsx","containers/Public/SaunterPage/SounterList/index.tsx","containers/Public/SaunterPage/SounterComponent/index.tsx","containers/Public/SaunterPage/index.tsx"],"names":["geoPositionReducer","state","action","type","positions","payload","error","Error","useGeoPosition","clearPosition","useReducer","dispatch","useEffect","navigator","geolocation","watchPosition","position","coords","clearWatch","containerStyle","width","height","Option","Select","MapComponentMemo","observer","button","click","currentPos","sounterStore","useStore","useState","currentPosition","setCurrentPosition","setMap","marker","setMarker","distanceLength","setDistanceLength","travelMode","setTravelMode","origin","setOrigin","destination","setDestination","waypoints","setWaypoints","response","setResponse","originMatrix","setOriginMatrix","destinationMatrix","setDestinationMatrix","responceMatrix","setResponseMatrix","lat","latitude","lng","longitude","item","markerArr","markersArr","isMarkers","length","changeWaipointsDistance","changeDistanceMatrix","setUserMarkers","totalRoadDistance","rows","elements","map","distance","value","findTotalDistance","setDistance","isLoaded","useJsApiLoader","id","googleMapsApiKey","onLoad","useCallback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","directionsServiceOptions","useMemo","optimizeWaypoints","location","stopover","shift","pop","directionsCallback","res","status","optionsMatrix","destinations","origins","avoidHighways","avoidTolls","distanceMatrixCallback","eachElementOK","forEach","el","console","log","className","styles","container","clearMap","onClick","icon","faMapMarkerAlt","color","size","btnIcon","select","showSearch","style","placeholder","optionFilterProp","onChange","mapContainerStyle","center","zoom","e","latLng","arr","label","draggable","options","callback","directions","React","memo","module","exports","ModalComponent","visible","children","title","modal","onOk","setModal","onCancel","footer","uuidv4","require","v4","PathFormComponent","userArrMarkers","shortDescription","fullDescription","inputValue","setInputValue","favorite","completedPath","setCompletedPath","completedObject","toJS","createCompletedPath","onChangeInput","target","name","prev","leftSide","onFinish","addUserPath","setItem","onFinishFailed","errorInfo","Item","input","minLength","TextArea","maxLength","align","justify","inputFullDescription","lengthContainer","faMapMarkedAlt","toFixed","htmlType","buttonAddPath","faCheck","rigthSide","SounterHeader","href","faArrowsAlt","Search","Input","Filter","filterValue","setFilterValue","allowClear","getFilterUserPath","SounterList","currentItem","classNames","itemActive","faStar","text","buttonGetDirections","faArrowRight","SounterComponent","filteredUserPath","list","key","notPathYet","pathContainer","pathWripper","buttonAddToFavorites","setFavorite","buttonRemove","removeUserPath","SaunterPage"],"mappings":"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","file":"static/js/7.5bd3486d.chunk.js","sourcesContent":["import { useEffect, useReducer } from 'react'\n\nconst geoPositionReducer = (\n  state: any,\n  action: { type: string; payload: any }\n) => {\n  switch (action.type) {\n    case 'success':\n      return {\n        ...state,\n        positions: action.payload,\n      }\n    case 'error':\n      return {\n        ...state,\n        error: action.payload,\n      }\n    default:\n      throw new Error(`Action not Found!`)\n  }\n}\n\nconst useGeoPosition = () => {\n  let clearPosition: number\n  const [state, dispatch] = useReducer(geoPositionReducer, {\n    positions: null,\n    error: null,\n  })\n\n  useEffect(() => {\n    if (!navigator.geolocation) {\n      dispatch({ type: 'error', payload: 'Browser not supported yet!' })\n    } else {\n      clearPosition = navigator.geolocation.watchPosition(\n        position => {\n          dispatch({\n            type: 'success',\n            payload: position.coords,\n          })\n        },\n        error =>\n          dispatch({\n            type: 'error',\n            payload: error,\n          })\n      )\n    }\n    return () => {\n      navigator.geolocation.clearWatch(clearPosition)\n    }\n  }, [])\n\n  return state\n}\n\nexport default useGeoPosition\n","import React, { useCallback, useState, useEffect, useMemo } from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  DirectionsService,\n  DirectionsRenderer,\n  DistanceMatrixService,\n  Marker,\n} from '@react-google-maps/api'\nimport useGeoPosition from 'utils/CurrentGeoposition/index'\nimport { Select } from 'antd'\nimport styles from './styles.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\n// import { toJS } from 'mobx'\nconst containerStyle = {\n  width: '100%',\n  height: '500px',\n}\ninterface IMap {\n  button?: boolean\n  click?: boolean\n  currentPos?: boolean\n}\nconst { Option } = Select\n\nconst MapComponentMemo: React.FC<IMap> = observer(\n  ({ button = false, click = false, currentPos = false }) => {\n    const { sounterStore } = useStore()\n    const { positions } = useGeoPosition()\n    const [currentPosition, setCurrentPosition] = useState<any>(null)\n    const [map, setMap] = useState(null)\n\n    const [marker, setMarker] = useState<any>()\n    const [distanceLength, setDistanceLength] = useState<number>(0)\n    const [travelMode, setTravelMode] = useState<any>('WALKING')\n    //Directions service\n    const [origin, setOrigin] = useState<any>(null)\n    const [destination, setDestination] = useState<any>(null)\n    const [waypoints, setWaypoints] = useState<any>([])\n    const [response, setResponse] = useState<any>(null)\n    // DistanceMatrix\n    const [originMatrix, setOriginMatrix] = useState<any>([])\n    const [destinationMatrix, setDestinationMatrix] = useState<any>([])\n    const [responceMatrix, setResponseMatrix] = useState<any>(null)\n\n    useEffect(() => {\n      positions &&\n        setCurrentPosition({\n          lat: positions?.latitude,\n          lng: positions?.longitude,\n        })\n    }, [positions])\n\n    useEffect(() => {\n      const isMarkers = () => {\n        if (sounterStore.item) {\n          const markerArr = sounterStore.item.markersArr\n          setMarker(markerArr)\n        }\n        if (click) {\n          setMarker([])\n        }\n      }\n      isMarkers()\n    }, [sounterStore.item, click])\n\n    useEffect(() => {\n      if (marker && marker.length > 1) {\n        changeWaipointsDistance(marker)\n        changeDistanceMatrix(marker)\n        sounterStore.setUserMarkers(marker)\n      }\n    }, [marker])\n\n    useEffect(() => {\n      const findTotalDistance = () => {\n        let totalRoadDistance = 0\n        if (responceMatrix !== null) {\n          responceMatrix?.rows[0]?.elements?.map(\n            (item: any) => (totalRoadDistance += item.distance?.value)\n          )\n          setDistanceLength(totalRoadDistance)\n        }\n      }\n      findTotalDistance()\n    }, [responceMatrix])\n\n    useEffect(() => {\n      if (distanceLength > 0) {\n        sounterStore.setDistance(distanceLength)\n      }\n    }, [distanceLength, sounterStore])\n\n    const clearMarkers = () => {\n      setMarker([])\n    }\n\n    //map code\n    const { isLoaded } = useJsApiLoader({\n      id: 'myprojectrealsoft',\n      googleMapsApiKey: 'AIzaSyARFt_e8aIQbS3evmvme0k4dInWVus72gw',\n    })\n\n    const onLoad = useCallback(function callback(map) {\n      const bounds = new window.google.maps.LatLngBounds()\n      map.fitBounds(bounds)\n      setMap(map)\n    }, [])\n\n    const onUnmount = useCallback(function callback(map) {\n      setMap(null)\n    }, [])\n\n    const onMapClick = (...args: any) => {\n      const e = args[0]\n      const lat: any = e.latLng.lat()\n      const lng: any = e.latLng.lng()\n      const arr = [...marker, { lat, lng }]\n      setMarker(arr)\n    }\n\n    //Directions service\n    const directionsServiceOptions = useMemo(() => {\n      return {\n        destination: destination,\n        origin: origin,\n        travelMode: travelMode,\n        waypoints: waypoints,\n        optimizeWaypoints: true,\n      }\n    }, [destination, origin, travelMode, waypoints])\n\n    const changeWaipointsDistance = (markerArr: any) => {\n      const waypoints = markerArr.map((marker: any) => ({\n        location: { lat: marker.lat, lng: marker.lng },\n        stopover: true,\n      }))\n      const origin = waypoints.shift().location\n      const destination = waypoints.pop().location\n      setOrigin(origin)\n      setDestination(destination)\n      setWaypoints(waypoints)\n    }\n\n    const directionsCallback = useCallback(\n      res => {\n        if (res !== null) {\n          if (res.status === 'OK') {\n            setResponse(res)\n          } else {\n          }\n        }\n      },\n      [destination, origin, waypoints, travelMode]\n    )\n\n    // DistanceMatrix\n    const optionsMatrix = useMemo(() => {\n      return {\n        destinations: [...destinationMatrix],\n        origins: [...originMatrix],\n        travelMode: travelMode,\n        avoidHighways: false,\n        avoidTolls: false,\n      }\n    }, [destinationMatrix, originMatrix, travelMode])\n\n    const changeDistanceMatrix = (markerArr: any) => {\n      const origins = [markerArr[0]]\n      const destinations = markerArr\n      setOriginMatrix(origins)\n      setDestinationMatrix(destinations)\n    }\n\n    const distanceMatrixCallback = useCallback(res => {\n      if (res !== null) {\n        let eachElementOK = false\n        res.rows[0].elements.forEach((el: any) => {\n          eachElementOK = el.status === 'OK'\n        })\n        if (eachElementOK) {\n          setResponseMatrix(res)\n        } else {\n        }\n      }\n    }, [])\n\n    function onChange(value: any) {\n      setTravelMode(value)\n    }\n    console.log(travelMode)\n\n    return (\n      <div className={styles.container}>\n        {button && (\n          <>\n            <button\n              type=\"button\"\n              className={styles.clearMap}\n              onClick={clearMarkers}\n            >\n              <FontAwesomeIcon\n                icon={faMapMarkerAlt}\n                color=\"grey\"\n                size=\"1x\"\n                className={styles.btnIcon}\n              />\n              Clear Map\n            </button>\n            <Select\n              className={styles.select}\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select trevel mode\"\n              optionFilterProp=\"children\"\n              onChange={onChange}\n            >\n              <Option value=\"DRIVING\">DRIVING</Option>\n              <Option value=\"WALKING\">WALKING</Option>\n              {/* <Option value=\"BICYCLING\">BICYCLING</Option> */}\n            </Select>\n          </>\n        )}\n        <div className={styles.containerStyle}>\n          {isLoaded ? (\n            <GoogleMap\n              mapContainerStyle={containerStyle}\n              center={currentPosition}\n              zoom={100}\n              onLoad={onLoad}\n              onUnmount={onUnmount}\n              onClick={click ? onMapClick : () => {}}\n            >\n              {currentPos && (\n                <Marker\n                  label=\"currentPosition\"\n                  position={currentPosition}\n                  draggable={false}\n                ></Marker>\n              )}\n              {destination && origin && (\n                <DirectionsService\n                  options={directionsServiceOptions}\n                  callback={directionsCallback}\n                />\n              )}\n              <DistanceMatrixService\n                options={optionsMatrix}\n                callback={distanceMatrixCallback}\n              />\n              {marker && marker.length > 1 ? (\n                <DirectionsRenderer\n                  options={{\n                    directions: response,\n                    draggable: true,\n                  }}\n                />\n              ) : null}\n            </GoogleMap>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n)\nexport default React.memo(MapComponentMemo)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3B7ha\",\"clearMap\":\"styles_clearMap__1Zm7B\",\"btnIcon\":\"styles_btnIcon__3fe8O\",\"select\":\"styles_select__2vPa-\",\"containerStyle\":\"styles_containerStyle__2LB0h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__3PiYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3L7tB\",\"leftSide\":\"styles_leftSide__1flmX\",\"label\":\"styles_label__3Q8MD\",\"input\":\"styles_input___XjMP\",\"inputFullDescription\":\"styles_inputFullDescription__bw6f6\",\"lengthContainer\":\"styles_lengthContainer__3pkca\",\"length\":\"styles_length__2_HIE\",\"buttonAddPath\":\"styles_buttonAddPath__3zXOp\",\"btnIcon\":\"styles_btnIcon__13Kvq\",\"rigthSide\":\"styles_rigthSide___-5Vs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__PrO8Q\",\"title\":\"styles_title__6XpeJ\",\"buttonAddPath\":\"styles_buttonAddPath__1NGWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__2IOXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__WhTOh\",\"icon\":\"styles_icon__3-6Mj\",\"title\":\"styles_title__1thfg\",\"text\":\"styles_text__3MKiO\",\"distance\":\"styles_distance__OnAhF\",\"buttonGetDirections\":\"styles_buttonGetDirections__1R-vk\",\"itemActive\":\"styles_itemActive__2MWzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__CWx5j\",\"leftSide\":\"styles_leftSide__3oe5v\",\"list\":\"styles_list__34pbh\",\"rigthSide\":\"styles_rigthSide__1r3cu\",\"icon\":\"styles_icon__1OHdb\",\"pathContainer\":\"styles_pathContainer__10Ge2\",\"pathWripper\":\"styles_pathWripper__1ypt5\",\"title\":\"styles_title__3-dVI\",\"distance\":\"styles_distance__3pOnZ\",\"text\":\"styles_text__3iQX5\",\"buttonAddToFavorites\":\"styles_buttonAddToFavorites__DR7AN\",\"buttonRemove\":\"styles_buttonRemove__3uKsn\",\"notPathYet\":\"styles_notPathYet__2fZ8X\"};","import React from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport { Modal } from 'antd'\nimport styles from './styles.module.scss'\n\nconst ModalComponent: React.FC<any> = observer(({ visible, children }: any) => {\n  const { sounterStore } = useStore()\n\n  const handleOk = () => {\n    sounterStore.setModal()\n  }\n  const handleCancel = () => {\n    sounterStore.setModal()\n  }\n\n  return (\n    <>\n      <Modal\n        title=\"Add new path\"\n        className={styles.modal}\n        width=\"1110px\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={null}\n      >\n        {children}\n      </Modal>\n    </>\n  )\n})\n\nexport default ModalComponent\n","import React, { useEffect, useState } from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport { Form, Input, Button, Row } from 'antd'\nimport MapComponent from 'utils/MapComponent/index'\nimport MapComponentMemo from 'components/MapComponentMemo'\nimport styles from './styles.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkedAlt, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { toJS } from 'mobx'\n\nconst { v4: uuidv4 } = require('uuid')\nconst maxLength = 160\n\nconst PathFormComponent = observer(() => {\n  const { sounterStore } = useStore()\n  const { distance, userArrMarkers } = sounterStore\n  const [inputValue, setInputValue] = useState<any>({\n    title: '',\n    shortDescription: '',\n    fullDescription: '',\n    id: null,\n  })\n  const [completedPath, setCompletedPath] = useState<any>({\n    title: '',\n    shortDescription: '',\n    fullDescription: '',\n    id: null,\n    distance: 0,\n    favorite: false,\n    markersArr: null,\n  })\n\n  useEffect(() => {\n    const createCompletedPath = () => {\n      const completedObject = {\n        ...inputValue,\n        id: uuidv4(),\n        distance,\n        markersArr: toJS(userArrMarkers),\n      }\n      setCompletedPath(completedObject)\n    }\n    createCompletedPath()\n  }, [inputValue, distance, userArrMarkers])\n\n  const onChangeInput = (e: any) => {\n    const { name, value } = e.target\n    setInputValue((prev: any) => ({ ...prev, [name]: value }))\n  }\n\n  const getResetForm = () => {\n    setInputValue({\n      title: '',\n      shortDescription: '',\n      fullDescription: '',\n      id: null,\n    })\n    sounterStore.setDistance(0)\n    sounterStore.setItem(null)\n    sounterStore.setModal()\n  }\n\n  const onFinish = () => {\n    sounterStore.addUserPath(completedPath)\n    getResetForm()\n  }\n\n  const convertorKm = (item: number) => {\n    const result = (item / 1000).toFixed(1)\n    return result\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.leftSide}>\n          <Form\n            name=\"pathForm\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Title\"\n              className={styles.label}\n              // rules={[{ required: true, message: 'Please enter title' }]}\n            ></Form.Item>\n            <Input\n              name=\"title\"\n              value={inputValue.title}\n              placeholder=\"Text input\"\n              className={styles.input}\n              onChange={onChangeInput}\n              minLength={5}\n            />\n            <Form.Item\n              label=\"Short description\"\n              className={styles.label}\n            ></Form.Item>\n            <Input.TextArea\n              name=\"shortDescription\"\n              value={inputValue.shortDescription}\n              placeholder=\"Text area\"\n              className={styles.input}\n              maxLength={maxLength}\n              onChange={onChangeInput}\n            />\n            <Row\n              align=\"middle\"\n              justify=\"end\"\n            >{`Limit ${inputValue.shortDescription.length} of ${maxLength}`}</Row>\n            <Form.Item\n              label=\"Full description\"\n              className={styles.label}\n            ></Form.Item>\n            <Input.TextArea\n              name=\"fullDescription\"\n              value={inputValue.fullDescription}\n              placeholder=\"Text area\"\n              className={styles.inputFullDescription}\n              onChange={onChangeInput}\n            />\n            <div className={styles.lengthContainer}>\n              <FontAwesomeIcon icon={faMapMarkedAlt} color=\"grey\" size=\"2x\" />\n              <p className={styles.length}>\n                Length {convertorKm(sounterStore.distance)} km\n              </p>\n            </div>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className={styles.buttonAddPath}\n              >\n                <FontAwesomeIcon\n                  icon={faCheck}\n                  color=\"white\"\n                  size=\"1x\"\n                  className={styles.btnIcon}\n                />\n                Add path\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n        <div className={styles.rigthSide}>\n          <MapComponentMemo button={true} click={true} currentPos={true} />\n        </div>\n      </div>\n    </>\n  )\n})\n\nexport default PathFormComponent\n","import React from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport ModalComponent from 'containers/Public/Modal/modal'\nimport PathFormComponent from 'containers/Public/SaunterPage/PathFormComponent'\nimport styles from './styles.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowsAlt } from '@fortawesome/free-solid-svg-icons'\n// import { toJS } from 'mobx'\n\nconst SounterHeader = observer(() => {\n  const { sounterStore } = useStore()\n\n  const addPath = () => {\n    sounterStore.setModal()\n  }\n  return (\n    <div className={styles.container}>\n      <ModalComponent visible={sounterStore.modal}>\n        <PathFormComponent />\n      </ModalComponent>\n      <a href=\"/home\">\n        <FontAwesomeIcon\n          icon={faArrowsAlt}\n          color=\" rgb(0, 110, 255)\"\n          size=\"2x\"\n        />\n        <h2 className={styles.title}>Sounter</h2>\n      </a>\n      <button type=\"button\" className={styles.buttonAddPath} onClick={addPath}>\n        AddPath\n      </button>\n    </div>\n  )\n})\n\nexport default SounterHeader\n","import React, { useState } from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react-lite'\nimport styles from './styles.module.scss'\nimport { Input } from 'antd'\n// import { toJS } from 'mobx'\nconst { Search } = Input\n\nconst Filter = observer(() => {\n  const { sounterStore } = useStore()\n  const [filterValue, setFilterValue] = useState<string>('')\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    setFilterValue(value)\n    sounterStore.getFilterUserPath(value)\n  }\n\n  return (\n    <>\n      <Search\n        placeholder=\"Search...\"\n        allowClear={true}\n        size=\"large\"\n        className={styles.input}\n        name=\"filter\"\n        value={filterValue}\n        onChange={onChange}\n      />\n    </>\n  )\n})\n\nexport default Filter\n","import React from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport IList from 'models/index'\nimport styles from './styles.module.scss'\nimport classNames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faArrowsAlt,\n  faArrowRight,\n  faStar,\n} from '@fortawesome/free-solid-svg-icons'\n// import { toJS } from 'mobx'\n\ninterface ISouterProps {\n  item: IList\n}\nconst SounterList: React.FC<ISouterProps> = observer(({ item }) => {\n  const { sounterStore } = useStore()\n  const { item: currentItem } = sounterStore\n\n  const getDirections = () => {\n    sounterStore.setItem(item)\n  }\n  const convertorKm = (distance: any) => {\n    const result = (distance / 1000).toFixed(1)\n    return result\n  }\n\n  return (\n    <li\n      className={classNames({\n        [styles.item]: true,\n        [styles.itemActive]: item.id === currentItem?.id,\n      })}\n      onClick={getDirections}\n    >\n      <FontAwesomeIcon\n        icon={faArrowsAlt}\n        color=\"grey\"\n        size=\"2x\"\n        className={styles.icon}\n      />\n      <div className={styles.container}>\n        {item.favorite && (\n          <FontAwesomeIcon icon={faStar} color=\"yellow\" size=\"2x\" />\n        )}\n        <h2 className={styles.title}>{item.title}</h2>\n        <p className={styles.text}>{item.shortDescription}</p>\n      </div>\n      <p className={styles.distance}>{convertorKm(item.distance)} km</p>\n      <button type=\"button\" className={styles.buttonGetDirections}>\n        <FontAwesomeIcon icon={faArrowRight} color=\"grey\" size=\"1x\" />\n      </button>\n    </li>\n  )\n})\n\nexport default SounterList\n","import React from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport Filter from '../Filter'\nimport SounterList from '../SounterList'\nimport MapComponentMemo from 'components/MapComponentMemo'\nimport styles from './styles.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowsAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst SounterComponent = observer(() => {\n  const { sounterStore } = useStore()\n  const { item, filteredUserPath } = sounterStore\n\n  const addToFavorites = () => {\n    sounterStore.setFavorite()\n  }\n  const removePath = (id: string) => {\n    sounterStore.removeUserPath(id)\n    sounterStore.setItem(null)\n  }\n  const convertorKm = (distance: number) => {\n    const result = (distance / 1000).toFixed(1)\n    return result\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.leftSide}>\n        <Filter />\n        <ul className={styles.list}>\n          {filteredUserPath.length > 0 ? (\n            filteredUserPath.map(item => (\n              <SounterList item={item} key={item.id} />\n            ))\n          ) : (\n            <h2 className={styles.notPathYet}>Not Path yet!</h2>\n          )}\n        </ul>\n      </div>\n      <div className={styles.rigthSide}>\n        {item ? (\n          <>\n            <div className={styles.pathContainer}>\n              <div className={styles.pathWripper}>\n                <h2 className={styles.title}>{item.title}</h2>\n                <p className={styles.distance}>\n                  {convertorKm(item.distance)} km\n                </p>\n              </div>\n              <p className={styles.text}>{item.shortDescription}</p>\n            </div>\n            <MapComponentMemo key={item.id} />\n            <button\n              className={styles.buttonAddToFavorites}\n              type=\"button\"\n              onClick={addToFavorites}\n            >\n              {!item.favorite ? 'Add to favorites' : 'Remuve from favorites'}\n            </button>\n            <button\n              className={styles.buttonRemove}\n              type=\"button\"\n              onClick={() => removePath(item.id)}\n            >\n              Remove\n            </button>\n          </>\n        ) : (\n          <>\n            <FontAwesomeIcon\n              icon={faArrowsAlt}\n              color=\"rgb(31, 162, 250)\"\n              size=\"10x\"\n              className={styles.icon}\n            />\n            <h2 className={styles.notPathYet}>Select any path!</h2>\n          </>\n        )}\n      </div>\n    </div>\n  )\n})\n\nexport default SounterComponent\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport SounterHeader from './SounterHeader'\nimport SounterComponent from './SounterComponent'\n\nconst SaunterPage = observer(() => {\n  return (\n    <>\n      <SounterHeader />\n      <SounterComponent />\n    </>\n  )\n})\n\nexport default SaunterPage\n"],"sourceRoot":""}