{"version":3,"sources":["components/CurrentGeoposition/index.tsx","components/MapComponent/index.tsx","components/MapComponent/styles.module.scss","containers/Public/SaunterPage/SounterHeader/styles.module.scss","containers/Public/Modal/styles.module.scss","containers/Public/PathFormComponent/styles.module.scss","containers/Public/SaunterPage/SounterComponent/styles.module.scss","containers/Public/SaunterPage/Filter/styles.module.scss","containers/Public/SaunterPage/SounterList/styles.module.scss","containers/Public/Modal/modal.tsx","containers/Public/PathFormComponent/index.tsx","containers/Public/SaunterPage/SounterHeader/index.tsx","containers/Public/SaunterPage/Filter/index.tsx","containers/Public/SaunterPage/SounterList/index.tsx","containers/Public/SaunterPage/SounterComponent/index.tsx","containers/Public/SaunterPage/index.tsx"],"names":["geoPositionReducer","state","action","type","positions","payload","error","Error","useGeoPosition","clearPosition","useReducer","dispatch","useEffect","navigator","geolocation","watchPosition","position","coords","clearWatch","containerStyle","width","height","MapComponent","observer","button","click","currentPos","sounterStore","useStore","useState","currentPosition","setCurrentPosition","setMap","response","setResponse","responceMatrix","setResponseMatrix","marker","setMarker","distanceLength","setLength","destination","origin","travelMode","waypoints","optimizeWaypoints","options","setOptions","destinations","origins","avoidHighways","avoidTolls","optionsMatrix","setOptionsMatrix","item","markerArr","markersArr","isMarkers","lat","latitude","lng","longitude","length","distance","distanceMatrix","setUserMarkers","findTotalDistance","setDistance","totalRoadDistance","rows","elements","map","value","isLoaded","useJsApiLoader","id","googleMapsApiKey","onLoad","useCallback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","directionsCallback","res","status","location","stopover","shift","pop","distanceMatrixCallback","eachElementOK","forEach","el","className","styles","container","addMarker","onClick","icon","faMapMarkerAlt","color","size","btnIcon","mapContainerStyle","center","zoom","e","latLng","arr","label","draggable","callback","directions","React","memo","module","exports","ModalComponent","visible","children","title","modal","onOk","setModal","onCancel","footer","uuidv4","require","v4","PathFormComponent","userArrMarkers","shortDescription","fullDescription","inputValue","setInputValue","favorite","completedPath","setCompletedPath","completedObject","toJS","createCompletedPath","onChangeInput","target","name","prev","leftSide","onFinish","addUserPath","setItem","onFinishFailed","errorInfo","console","log","Item","placeholder","input","onChange","minLength","TextArea","maxLength","align","justify","inputFullDescription","lengthContainer","faMapMarkedAlt","toFixed","htmlType","buttonAddPath","faCheck","rigthSide","SounterHeader","faArrowsAlt","Search","Input","Filter","filterValue","setFilterValue","allowClear","getFilterUserPath","SounterList","currentItem","classNames","itemActive","faStar","text","buttonGetDirections","faArrowRight","SounterComponent","filteredUserPath","list","key","notPathYet","pathContainer","pathWripper","buttonAddToFavorites","setFavorite","buttonRemove","removeUserPath","SaunterPage"],"mappings":"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","file":"static/js/6.33a4204a.chunk.js","sourcesContent":["import { useEffect, useReducer } from 'react'\n\nconst geoPositionReducer = (\n  state: any,\n  action: { type: string; payload: any }\n) => {\n  switch (action.type) {\n    case 'success':\n      return {\n        ...state,\n        positions: action.payload,\n      }\n    case 'error':\n      return {\n        ...state,\n        error: action.payload,\n      }\n    default:\n      throw new Error(`Action not Found!`)\n  }\n}\n\nconst useGeoPosition = () => {\n  let clearPosition: number\n  const [state, dispatch] = useReducer(geoPositionReducer, {\n    positions: null,\n    error: null,\n  })\n\n  useEffect(() => {\n    if (!navigator.geolocation) {\n      dispatch({ type: 'error', payload: 'Browser not supported yet!' })\n    } else {\n      clearPosition = navigator.geolocation.watchPosition(\n        position => {\n          dispatch({\n            type: 'success',\n            payload: position.coords,\n          })\n        },\n        error =>\n          dispatch({\n            type: 'error',\n            payload: error,\n          })\n      )\n    }\n\n    return () => {\n      navigator.geolocation.clearWatch(clearPosition)\n    }\n  }, [])\n\n  return state\n}\n\nexport default useGeoPosition\n","/* global google */\nimport React, { useCallback, useState, useEffect, useMemo } from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport styles from './styles.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons'\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  DirectionsService,\n  DirectionsRenderer,\n  DistanceMatrixService,\n  Marker,\n} from '@react-google-maps/api'\nimport useGeoPosition from 'components/CurrentGeoposition/index'\n// import { toJS } from 'mobx'\n\nconst containerStyle = {\n  width: '100%',\n  height: '500px',\n}\ninterface IMap {\n  button?: boolean\n  click?: boolean\n  currentPos?: boolean\n}\n// 'Chicago, IL' 'Los Angeles, CA' 'DRIVING'\nconst MapComponent: React.FC<IMap> = observer(\n  ({ button = false, click = false, currentPos = false }) => {\n    const { sounterStore } = useStore()\n    const { positions } = useGeoPosition()\n    const [currentPosition, setCurrentPosition] = useState<any>({})\n    const [map, setMap] = useState(null)\n    const [response, setResponse] = useState(null)\n    const [responceMatrix, setResponseMatrix] = useState<any>(null)\n    const [marker, setMarker] = useState<any>()\n    const [distanceLength, setLength] = useState<number>(0)\n    //Directions service\n    const [options, setOptions] = useState<any>({\n      destination: '',\n      origin: '',\n      travelMode: 'WALKING',\n      waypoints: [],\n      optimizeWaypoints: true,\n    })\n    // DistanceMatrix\n    const [optionsMatrix, setOptionsMatrix] = useState<any>({\n      destinations: [],\n      origins: [],\n      travelMode: 'WALKING',\n      avoidHighways: false,\n      avoidTolls: false,\n    })\n\n    useEffect(() => {\n      const isMarkers = () => {\n        if (sounterStore.item) {\n          const markerArr = sounterStore.item.markersArr\n          setMarker(markerArr)\n        } else setMarker([])\n      }\n      isMarkers()\n    }, [sounterStore.item])\n\n    useEffect(() => {\n      click && setMarker([])\n    }, [sounterStore.item])\n\n    useEffect(() => {\n      positions &&\n        setCurrentPosition({\n          lat: positions?.latitude,\n          lng: positions?.longitude,\n        })\n    }, [positions])\n\n    useEffect(() => {\n      if (marker && marker.length > 1) {\n        distance(marker)\n        distanceMatrix(marker)\n        sounterStore.setUserMarkers(marker)\n      }\n    }, [marker])\n\n    useEffect(() => {\n      findTotalDistance()\n    }, [responceMatrix])\n\n    useEffect(() => {\n      if (distanceLength > 0) {\n        sounterStore.setDistance(distanceLength)\n      }\n    }, [distanceLength, sounterStore])\n\n    const addMarker = () => {\n      setCurrentPosition({\n        lat: positions?.latitude,\n        lng: positions?.longitude,\n      })\n    }\n    const findTotalDistance = () => {\n      let totalRoadDistance = 0\n      if (responceMatrix !== null) {\n        responceMatrix?.rows[0]?.elements?.map(\n          (item: any) => (totalRoadDistance += item.distance?.value)\n        )\n        setLength(totalRoadDistance)\n      }\n    }\n\n    //map code\n    const { isLoaded } = useJsApiLoader({\n      id: 'myprojectrealsoft',\n      googleMapsApiKey: 'AIzaSyARFt_e8aIQbS3evmvme0k4dInWVus72gw',\n    })\n    const onLoad = useCallback(function callback(map) {\n      const bounds = new window.google.maps.LatLngBounds()\n      map.fitBounds(bounds)\n      setMap(map)\n    }, [])\n    const onUnmount = useCallback(function callback(map) {\n      setMap(null)\n    }, [])\n\n    const onMapClick = (...args: any) => {\n      const e = args[0]\n      const lat: any = e.latLng.lat()\n      const lng: any = e.latLng.lng()\n      const arr = [...marker, { lat, lng }]\n      setMarker(arr)\n    }\n\n    //directions service code\n    const directionsCallback = useCallback(res => {\n      // console.log('directionsCallback', toJS(res))\n      if (res !== null) {\n        if (res.status === 'OK') {\n          setResponse(res)\n        } else {\n        }\n      }\n    }, [])\n\n    const distance = (markerArr: any) => {\n      const waypoints = markerArr.map((marker: any) => ({\n        location: { lat: marker.lat, lng: marker.lng },\n        stopover: true,\n      }))\n      const origin = waypoints.shift().location\n      const destination = waypoints.pop().location\n      setOptions({\n        ...options,\n        waypoints,\n        origin,\n        destination,\n      })\n    }\n\n    // DistanceMatrix code\n    const distanceMatrixCallback = useCallback(res => {\n      // console.log('distanceMatrixCallback', toJS(res))\n      if (res !== null) {\n        let eachElementOK = false\n        res.rows[0].elements.forEach((el: any) => {\n          eachElementOK = el.status === 'OK'\n        })\n        if (eachElementOK) {\n          setResponseMatrix(res)\n        } else {\n        }\n      }\n    }, [])\n\n    const distanceMatrix = (markerArr: any) => {\n      const origins = [markerArr[0]]\n      const destinations = markerArr\n      setOptionsMatrix({\n        ...optionsMatrix,\n        origins,\n        destinations,\n      })\n    }\n    // const directionsMatrixOptions = useMemo(() => {\n    //   return {\n    //     destinations: [...destinationMatrix],\n    //     origins: [...originDistanceMatrix],\n    //     travelMode: travelMode,\n    //   }\n    // }, [destinationMatrix, originDistanceMatrix, travelMode])\n\n    return (\n      <div className={styles.container}>\n        {button && (\n          <button\n            type=\"button\"\n            className={styles.addMarker}\n            onClick={addMarker}\n          >\n            <FontAwesomeIcon\n              icon={faMapMarkerAlt}\n              color=\"grey\"\n              size=\"1x\"\n              className={styles.btnIcon}\n            />\n            Add current position\n          </button>\n        )}\n        <div className={styles.containerStyle}>\n          {isLoaded ? (\n            <GoogleMap\n              mapContainerStyle={containerStyle}\n              center={currentPosition}\n              zoom={100}\n              onLoad={onLoad}\n              onUnmount={onUnmount}\n              onClick={click ? onMapClick : () => {}}\n            >\n              {currentPos && (\n                <Marker\n                  label=\"currentPosition\"\n                  position={currentPosition}\n                  draggable={false}\n                ></Marker>\n              )}\n              {marker && (\n                <DirectionsService\n                  options={options}\n                  callback={directionsCallback}\n                />\n              )}\n              <DistanceMatrixService\n                options={optionsMatrix}\n                callback={distanceMatrixCallback}\n              />\n              {/* {marker &&\n              marker.length === 1 &&\n              marker.map((el: any) => (\n                <Marker position={el} draggable={false} key={el.lat + el.lng} />\n              ))} */}\n              {marker && marker.length > 1 ? (\n                <DirectionsRenderer\n                  options={{\n                    directions: response,\n                    // draggable: true,\n                  }}\n                />\n              ) : null}\n            </GoogleMap>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n)\nexport default React.memo(MapComponent)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3bhCi\",\"addMarker\":\"styles_addMarker__361ni\",\"btnIcon\":\"styles_btnIcon__3IJzP\",\"containerStyle\":\"styles_containerStyle__1LqZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__PrO8Q\",\"title\":\"styles_title__6XpeJ\",\"buttonAddPath\":\"styles_buttonAddPath__1NGWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__3PiYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__11gLu\",\"leftSide\":\"styles_leftSide__2nkHC\",\"label\":\"styles_label__1wtzo\",\"input\":\"styles_input__1HQL2\",\"inputFullDescription\":\"styles_inputFullDescription__2MHe4\",\"lengthContainer\":\"styles_lengthContainer__3jZRm\",\"length\":\"styles_length__3ZzuV\",\"buttonAddPath\":\"styles_buttonAddPath__asSoj\",\"btnIcon\":\"styles_btnIcon__1nhtp\",\"rigthSide\":\"styles_rigthSide__11S8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__CWx5j\",\"leftSide\":\"styles_leftSide__3oe5v\",\"list\":\"styles_list__34pbh\",\"rigthSide\":\"styles_rigthSide__1r3cu\",\"icon\":\"styles_icon__1OHdb\",\"pathContainer\":\"styles_pathContainer__10Ge2\",\"pathWripper\":\"styles_pathWripper__1ypt5\",\"title\":\"styles_title__3-dVI\",\"distance\":\"styles_distance__3pOnZ\",\"text\":\"styles_text__3iQX5\",\"buttonAddToFavorites\":\"styles_buttonAddToFavorites__DR7AN\",\"buttonRemove\":\"styles_buttonRemove__3uKsn\",\"notPathYet\":\"styles_notPathYet__2fZ8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__2IOXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"styles_item__WhTOh\",\"icon\":\"styles_icon__3-6Mj\",\"title\":\"styles_title__1thfg\",\"text\":\"styles_text__3MKiO\",\"distance\":\"styles_distance__OnAhF\",\"buttonGetDirections\":\"styles_buttonGetDirections__1R-vk\",\"itemActive\":\"styles_itemActive__2MWzE\"};","import React from 'react'\nimport styles from './styles.module.scss'\nimport { Modal } from 'antd'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\n\nconst ModalComponent: React.FC<any> = observer(({ visible, children }: any) => {\n  const { sounterStore } = useStore()\n\n  const handleOk = () => {\n    sounterStore.setModal()\n  }\n  const handleCancel = () => {\n    sounterStore.setModal()\n  }\n\n  return (\n    <>\n      <Modal\n        title=\"Add new path\"\n        className={styles.modal}\n        width=\"1110px\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={null}\n      >\n        {children}\n      </Modal>\n    </>\n  )\n})\n\nexport default ModalComponent\n","import React, { useEffect, useState } from 'react'\n// import IList from 'models/index'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport styles from './styles.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkedAlt, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport MapComponent from 'components/MapComponent/index'\nimport { Form, Input, Button, Row } from 'antd'\nimport { toJS } from 'mobx'\n\nconst { v4: uuidv4 } = require('uuid')\nconst maxLength = 160\n\nconst PathFormComponent = observer(() => {\n  const { sounterStore } = useStore()\n  const { distance, userArrMarkers } = sounterStore\n  const [inputValue, setInputValue] = useState<any>({\n    title: '',\n    shortDescription: '',\n    fullDescription: '',\n    id: null,\n  })\n  const [completedPath, setCompletedPath] = useState<any>({\n    title: '',\n    shortDescription: '',\n    fullDescription: '',\n    id: null,\n    distance: 0,\n    favorite: false,\n    markersArr: null,\n  })\n\n  useEffect(() => {\n    const createCompletedPath = () => {\n      const completedObject = {\n        ...inputValue,\n        id: uuidv4(),\n        distance,\n        markersArr: toJS(userArrMarkers),\n      }\n      setCompletedPath(completedObject)\n    }\n    createCompletedPath()\n  }, [inputValue, distance, userArrMarkers])\n\n  const onChangeInput = (e: any) => {\n    const { name, value } = e.target\n    setInputValue((prev: any) => ({ ...prev, [name]: value }))\n  }\n  const getResetForm = () => {\n    setInputValue({\n      title: '',\n      shortDescription: '',\n      fullDescription: '',\n      id: null,\n    })\n    sounterStore.setDistance(0)\n    sounterStore.setItem(null)\n    sounterStore.setModal()\n  }\n  const onFinish = () => {\n    sounterStore.addUserPath(completedPath)\n    getResetForm()\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  const convertorKm = (item: number) => {\n    const result = (item / 1000).toFixed(1)\n    return result\n  }\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.leftSide}>\n          <Form\n            name=\"pathForm\"\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Title\"\n              name=\"title\"\n              className={styles.label}\n              // rules={[{ required: true, message: 'Please enter title' }]}\n            ></Form.Item>\n            <Input\n              name=\"title\"\n              value={inputValue.title}\n              placeholder=\"Text input\"\n              className={styles.input}\n              onChange={onChangeInput}\n              minLength={5}\n            />\n            <Form.Item\n              label=\"Short description\"\n              className={styles.label}\n            ></Form.Item>\n            <Input.TextArea\n              name=\"shortDescription\"\n              value={inputValue.shortDescription}\n              placeholder=\"Text area\"\n              className={styles.input}\n              maxLength={maxLength}\n              onChange={onChangeInput}\n            />\n            <Row\n              align=\"middle\"\n              justify=\"end\"\n            >{`Limit ${inputValue.shortDescription.length} of ${maxLength}`}</Row>\n            <Form.Item\n              label=\"Full description\"\n              className={styles.label}\n            ></Form.Item>\n            <Input.TextArea\n              name=\"fullDescription\"\n              value={inputValue.fullDescription}\n              placeholder=\"Text area\"\n              className={styles.inputFullDescription}\n              onChange={onChangeInput}\n            />\n            <div className={styles.lengthContainer}>\n              <FontAwesomeIcon icon={faMapMarkedAlt} color=\"grey\" size=\"2x\" />\n              <p className={styles.length}>\n                Length {convertorKm(sounterStore.distance)} km\n              </p>\n            </div>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className={styles.buttonAddPath}\n              >\n                <FontAwesomeIcon\n                  icon={faCheck}\n                  color=\"white\"\n                  size=\"1x\"\n                  className={styles.btnIcon}\n                />\n                Add path\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n        <div className={styles.rigthSide}>\n          <MapComponent button={true} click={true} currentPos={true} />\n        </div>\n      </div>\n    </>\n  )\n})\n\nexport default PathFormComponent\n","import React from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport styles from './styles.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowsAlt } from '@fortawesome/free-solid-svg-icons'\nimport ModalComponent from 'containers/Public/Modal/modal'\nimport PathFormComponent from 'containers/Public/PathFormComponent'\nimport { toJS } from 'mobx'\n\nconst SounterHeader = observer(() => {\n  const { sounterStore } = useStore()\n\n  const addPath = () => {\n    sounterStore.setModal()\n  }\n  return (\n    <div className={styles.container}>\n      <ModalComponent visible={sounterStore.modal}>\n        <PathFormComponent />\n      </ModalComponent>\n      <div>\n        <FontAwesomeIcon icon={faArrowsAlt} color=\"grey\" size=\"2x\" />\n        <h2 className={styles.title}>Sounter</h2>\n      </div>\n      <button type=\"button\" className={styles.buttonAddPath} onClick={addPath}>\n        AddPath\n      </button>\n    </div>\n  )\n})\n\nexport default SounterHeader\n","import React, { useState } from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react-lite'\nimport styles from './styles.module.scss'\nimport { Input } from 'antd'\n// import { toJS } from 'mobx'\nconst { Search } = Input\n\nconst Filter = observer(() => {\n  const { sounterStore } = useStore()\n  const [filterValue, setFilterValue] = useState<string>('')\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n    setFilterValue(value)\n    sounterStore.getFilterUserPath(value)\n  }\n\n  return (\n    <>\n      <Search\n        placeholder=\"Search...\"\n        allowClear={true}\n        size=\"large\"\n        className={styles.input}\n        name=\"filter\"\n        value={filterValue}\n        onChange={onChange}\n      />\n    </>\n  )\n})\n\nexport default Filter\n","import React from 'react'\nimport IList from 'models/index'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport styles from './styles.module.scss'\nimport classNames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faArrowsAlt,\n  faArrowRight,\n  faStar,\n} from '@fortawesome/free-solid-svg-icons'\n// import { toJS } from 'mobx'\n\ninterface ISouterProps {\n  item: IList\n}\nconst SounterList: React.FC<ISouterProps> = observer(({ item }) => {\n  const { sounterStore } = useStore()\n  const { item: currentItem } = sounterStore\n\n  const getDirections = () => {\n    sounterStore.setItem(item)\n  }\n  const convertorKm = (distance: any) => {\n    const result = (distance / 1000).toFixed(1)\n    return result\n  }\n\n  return (\n    <li\n      className={classNames({\n        [styles.item]: true,\n        [styles.itemActive]: item.id === currentItem?.id,\n      })}\n      onClick={getDirections}\n    >\n      <FontAwesomeIcon\n        icon={faArrowsAlt}\n        color=\"grey\"\n        size=\"2x\"\n        className={styles.icon}\n      />\n      <div className={styles.container}>\n        {item.favorite && (\n          <FontAwesomeIcon icon={faStar} color=\"yellow\" size=\"2x\" />\n        )}\n        <h2 className={styles.title}>{item.title}</h2>\n        <p className={styles.text}>{item.shortDescription}</p>\n      </div>\n      <p className={styles.distance}>{convertorKm(item.distance)} km</p>\n      <button type=\"button\" className={styles.buttonGetDirections}>\n        <FontAwesomeIcon icon={faArrowRight} color=\"grey\" size=\"1x\" />\n      </button>\n    </li>\n  )\n})\n\nexport default SounterList\n","import React from 'react'\nimport { useStore } from 'stores'\nimport { observer } from 'mobx-react'\nimport styles from './styles.module.scss'\nimport Filter from '../Filter'\nimport SounterList from '../SounterList'\nimport MapComponent from 'components/MapComponent'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowsAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst SounterComponent = observer(() => {\n  const { sounterStore } = useStore()\n  const { item, filteredUserPath } = sounterStore\n\n  const addToFavorites = () => {\n    sounterStore.setFavorite()\n  }\n  const removePath = (id: string) => {\n    sounterStore.removeUserPath(id)\n    sounterStore.setItem(null)\n  }\n  const convertorKm = (distance: number) => {\n    const result = (distance / 1000).toFixed(1)\n    return result\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.leftSide}>\n        <Filter />\n        <ul className={styles.list}>\n          {filteredUserPath.length > 0 ? (\n            filteredUserPath.map(item => (\n              <SounterList item={item} key={item.id} />\n            ))\n          ) : (\n            <h2 className={styles.notPathYet}>Not Path yet!</h2>\n          )}\n        </ul>\n      </div>\n      <div className={styles.rigthSide}>\n        {item ? (\n          <>\n            <div className={styles.pathContainer}>\n              <div className={styles.pathWripper}>\n                <h2 className={styles.title}>{item.title}</h2>\n                <p className={styles.distance}>\n                  {convertorKm(item.distance)} km\n                </p>\n              </div>\n              <p className={styles.text}>{item.shortDescription}</p>\n            </div>\n            <MapComponent key={item.id} />\n            <button\n              className={styles.buttonAddToFavorites}\n              type=\"button\"\n              onClick={addToFavorites}\n            >\n              {!item.favorite ? 'Add to favorites' : 'Remuve from favorites'}\n            </button>\n            <button\n              className={styles.buttonRemove}\n              type=\"button\"\n              onClick={() => removePath(item.id)}\n            >\n              Remove\n            </button>\n          </>\n        ) : (\n          <>\n            <FontAwesomeIcon\n              icon={faArrowsAlt}\n              color=\"rgb(31, 162, 250)\"\n              size=\"10x\"\n              className={styles.icon}\n            />\n            <h2 className={styles.notPathYet}>Select any path!</h2>\n          </>\n        )}\n      </div>\n    </div>\n  )\n})\n\nexport default SounterComponent\n","import React, { useEffect } from 'react'\nimport SounterHeader from './SounterHeader'\nimport SounterComponent from './SounterComponent'\nimport { observer } from 'mobx-react'\n\nconst SaunterPage = observer(() => {\n  return (\n    <>\n      <SounterHeader />\n      <SounterComponent />\n    </>\n  )\n})\n\nexport default SaunterPage\n"],"sourceRoot":""}